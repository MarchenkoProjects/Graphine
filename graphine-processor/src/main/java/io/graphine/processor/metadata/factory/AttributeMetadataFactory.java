package io.graphine.processor.metadata.factory;

import io.graphine.core.annotation.Attribute;
import io.graphine.core.annotation.Id;
import io.graphine.processor.metadata.model.entity.attribute.AttributeMetadata;
import io.graphine.processor.metadata.model.entity.attribute.IdentifierMetadata;

import javax.lang.model.element.VariableElement;

import static io.graphine.processor.util.StringUtils.isEmpty;
import static java.util.Objects.nonNull;

/**
 * @author Oleg Marchenko
 */
public final class AttributeMetadataFactory {
    public IdentifierMetadata createIdentifier(VariableElement element) {
        Id id = element.getAnnotation(Id.class);
        return new IdentifierMetadata(element, getColumn(element), id.autogenerated());
    }

    public AttributeMetadata createAttribute(VariableElement element) {
        return new AttributeMetadata(element, getColumn(element));
    }

    private static String getColumn(VariableElement element) {
        Attribute attribute = element.getAnnotation(Attribute.class);

        String column = null;
        if (nonNull(attribute)) {
            column = attribute.column();
        }
        if (isEmpty(column)) {
            // TODO: use column naming strategy
            column = element.getSimpleName().toString();
        }
        return column;
    }
}
